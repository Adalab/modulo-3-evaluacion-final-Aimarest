{"ast":null,"code":"import _objectSpread from\"/home/adalaber/Adalab/modulo-3/Evaluacion final-Modulo-3-React/modulo-3-evaluacion-final-Aimarest/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/adalaber/Adalab/modulo-3/Evaluacion final-Modulo-3-React/modulo-3-evaluacion-final-Aimarest/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../styles/App.scss\";import{useState,useEffect}from\"react\";import{Routes,Route}from\"react-router-dom\";import getApiMovies from\"../services/MoviesApi\";import objectToExport from\"../services/LocalStorage\";import Header from\"./Header\";import Filters from\"./Filters\";import Footer from\"./Footer\";import MovieSceneList from\"./MovieSceneList\";import MovieSceneDetail from\"./MovieSceneDetail\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//Buscar en localStorage el valor del input del filtro.\nvar inputText=objectToExport.get(\"inputText\",\"\");var _useState=useState(objectToExport.get(\"movies\",[])),_useState2=_slicedToArray(_useState,2),movieScenes=_useState2[0],setMovieScenes=_useState2[1];//Buscamos en el ls el valor del select del año.\nvar yearSearch=objectToExport.get(\"yearSearch\",\"\");var _useState3=useState(yearSearch),_useState4=_slicedToArray(_useState3,2),filterYear=_useState4[0],setFilterYear=_useState4[1];var _useState5=useState(inputText),_useState6=_slicedToArray(_useState5,2),filterName=_useState6[0],setFilterName=_useState6[1];useEffect(function(){// Usamos un useEffect para ejecutar el fetch() una sóla vez al cargar la página.\nif(movieScenes.length===0){getApiMovies().then(function(data){data=data.map(function(scene,index){return _objectSpread(_objectSpread({},scene),{},{id:index});});//Guardo en el ls lo que me ha devuelto el fetch\nobjectToExport.set(\"movies\",data);//Modifico la variable de estado del array de películas.\nsetMovieScenes(data);});}return function(){objectToExport.set(\"movies\",[]);};},[]);//Función que agrupa los años de las películas en una constante.\nvar getYears=function getYears(){var yearMovies=movieScenes.map(function(movie){return movie.year;});// Función que ordena los años de menor a mayor y filtra para que ningún año se repita :\nvar uniqueYear=yearMovies.sort(function(a,b){return a-b;}).filter(function(movie,i){return yearMovies.indexOf(movie)===i;});return uniqueYear;};//Filtro por año:\nvar filterByYear=function filterByYear(value){setFilterYear(value);objectToExport.set(\"yearSearch\",value);};//Fitro por nombre:\nvar filterByName=function filterByName(value){setFilterName(value);objectToExport.set(\"inputText\",value);};//Ordenar las películas por orden alfabético y filtrado:\nvar movieFilters=movieScenes.sort(function(a,b){return a.name>b.name?1:a.name<b.name?-1:0;}).filter(function(movie){return filterYear===\"\"?true:movie.year===parseInt(filterYear);}).filter(function(movie){if(filterName.length===0){return true;}else{if(movie.name.toLowerCase().includes(filterName.toLowerCase())){return true;}}return false;});return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Filters,{filterName:filterName,years:getYears(),filterYear:filterYear,filterByYear:filterByYear,setFilterYear:setFilterYear,filterByName:filterByName,setFilterName:setFilterName}),/*#__PURE__*/_jsx(MovieSceneList,{movies:movieFilters})]})}),/*#__PURE__*/_jsx(Route,{path:\"/movie/:movieIndex\",element:/*#__PURE__*/_jsx(MovieSceneDetail,{})})]})})}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"sources":["/home/adalaber/Adalab/modulo-3/Evaluacion final-Modulo-3-React/modulo-3-evaluacion-final-Aimarest/src/components/App.js"],"names":["useState","useEffect","Routes","Route","getApiMovies","objectToExport","Header","Filters","Footer","MovieSceneList","MovieSceneDetail","App","inputText","get","movieScenes","setMovieScenes","yearSearch","filterYear","setFilterYear","filterName","setFilterName","length","then","data","map","scene","index","id","set","getYears","yearMovies","movie","year","uniqueYear","sort","a","b","filter","i","indexOf","filterByYear","value","filterByName","movieFilters","name","parseInt","toLowerCase","includes"],"mappings":"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","sourcesContent":["import \"../styles/App.scss\";\nimport { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport getApiMovies from \"../services/MoviesApi\";\nimport objectToExport from \"../services/LocalStorage\";\nimport Header from \"./Header\";\nimport Filters from \"./Filters\";\nimport Footer from \"./Footer\";\nimport MovieSceneList from \"./MovieSceneList\";\nimport MovieSceneDetail from \"./MovieSceneDetail\";\n\nfunction App() {\n  //Buscar en localStorage el valor del input del filtro.\n  const inputText = objectToExport.get(\"inputText\", \"\");\n  const [movieScenes, setMovieScenes] = useState(\n    objectToExport.get(\"movies\", [])\n  );\n  //Buscamos en el ls el valor del select del año.\n  const yearSearch = objectToExport.get(\"yearSearch\", \"\");\n  const [filterYear, setFilterYear] = useState(yearSearch);\n  const [filterName, setFilterName] = useState(inputText);\n  useEffect(() => {\n    // Usamos un useEffect para ejecutar el fetch() una sóla vez al cargar la página.\n    if (movieScenes.length === 0) {\n      getApiMovies().then((data) => {\n        data = data.map((scene, index) => ({\n          ...scene,\n          id: index,\n        }));\n        //Guardo en el ls lo que me ha devuelto el fetch\n        objectToExport.set(\"movies\", data);\n        //Modifico la variable de estado del array de películas.\n        setMovieScenes(data);\n      });\n    }\n    return () => {\n      objectToExport.set(\"movies\", []);\n    };\n  }, []);\n\n  //Función que agrupa los años de las películas en una constante.\n  const getYears = () => {\n    const yearMovies = movieScenes.map((movie) => movie.year);\n\n    // Función que ordena los años de menor a mayor y filtra para que ningún año se repita :\n\n    const uniqueYear = yearMovies\n      .sort((a, b) => a - b)\n      .filter((movie, i) => {\n        return yearMovies.indexOf(movie) === i;\n      });\n\n    return uniqueYear;\n  };\n\n  //Filtro por año:\n\n  const filterByYear = (value) => {\n    setFilterYear(value);\n    objectToExport.set(\"yearSearch\", value);\n  };\n\n  //Fitro por nombre:\n  const filterByName = (value) => {\n    setFilterName(value);\n    objectToExport.set(\"inputText\", value);\n  };\n  //Ordenar las películas por orden alfabético y filtrado:\n\n  const movieFilters = movieScenes\n    .sort((a, b) => (a.name > b.name ? 1 : a.name < b.name ? -1 : 0))\n    .filter((movie) => {\n      return filterYear === \"\" ? true : movie.year === parseInt(filterYear);\n    })\n    .filter((movie) => {\n      if (filterName.length === 0) {\n        return true;\n      } else {\n        if (movie.name.toLowerCase().includes(filterName.toLowerCase())) {\n          return true;\n        }\n      }\n      return false;\n    });\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <section>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <>\n                  <Filters\n                    filterName={filterName}\n                    years={getYears()}\n                    filterYear={filterYear}\n                    filterByYear={filterByYear}\n                    setFilterYear={setFilterYear}\n                    filterByName={filterByName}\n                    setFilterName={setFilterName}\n                  />\n                  <MovieSceneList movies={movieFilters} />\n                </>\n              }\n            />\n            <Route path=\"/movie/:movieIndex\" element={<MovieSceneDetail />} />\n          </Routes>\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}